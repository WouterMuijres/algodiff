% This file loads the results of the simulations.
%
% Author: Antoine Falisse
% Date: 9/9/2019
%
%% load results
pathresults = [pathRepo_3D,'/Results/',setup.ocp];
load([pathresults,'/Results_3D.mat']);

%% Extract results following pre-defined structure
deri        = settings(ww_3D(k),1); % derivative supplier identifier
hessi       = settings(ww_3D(k),2); % Hessian identifier
linsoli     = settings(ww_3D(k),3); % linear solver identifier
IGi         = settings(ww_3D(k),4); % initial guess identifier
N           = 50;                   % number of mesh intervals
if deri == 1
    setup.derivatives = 'AD_Recorder'; % Algorithmic differentiation / Recorder    
elseif deri == 2
    setup.derivatives = 'AD_ADOLC'; % Algorithmic differentiation / ADOL-C
elseif deri == 3
    setup.derivatives = 'FD'; % Finite differences
end
hess_names = {'Approximated','Exact'};
linear_solvers = {'mumps','ma27','ma57','ma77','ma86','ma97'}; 
% Joints angles
Qs_opt_3D(ww_3D(k)).m = Results_3D. ....
    (['Derivative_',setup.derivatives]). ...
    (['Hessian_',hess_names{hessi}]). ...
    (['LinearSolver_',linear_solvers{linsoli}]). ...
    (['InitialGuess_',num2str(IGi)]).Qs_opt;
% Joint torques
Ts_opt_3D(ww_3D(k)).m = Results_3D. ....
    (['Derivative_',setup.derivatives]). ...
    (['Hessian_',hess_names{hessi}]). ...
    (['LinearSolver_',linear_solvers{linsoli}]). ...
    (['InitialGuess_',num2str(IGi)]).Ts_opt;
% Ground reaction forces
GRFs_opt_3D(ww_3D(k)).m = Results_3D. ....
    (['Derivative_',setup.derivatives]). ...
    (['Hessian_',hess_names{hessi}]). ...
    (['LinearSolver_',linear_solvers{linsoli}]). ...
    (['InitialGuess_',num2str(IGi)]).GRFs_opt;
% Ground reaction torques
GRMs_opt_3D(ww_3D(k)).m =  Results_3D. ....
    (['Derivative_',setup.derivatives]). ...
    (['Hessian_',hess_names{hessi}]). ...
    (['LinearSolver_',linear_solvers{linsoli}]). ...
    (['InitialGuess_',num2str(IGi)]).GRMs_opt;
% Muscle activations
As_opt_3D(ww_3D(k)).m =  Results_3D. ....
    (['Derivative_',setup.derivatives]). ...
    (['Hessian_',hess_names{hessi}]). ...
    (['LinearSolver_',linear_solvers{linsoli}]). ...
    (['InitialGuess_',num2str(IGi)]).Acts_opt;
% Contact model parameters
ParamsCM_opt_3D(ww_3D(k)).m =  Results_3D. ....
    (['Derivative_',setup.derivatives]). ...
    (['Hessian_',hess_names{hessi}]). ...
    (['LinearSolver_',linear_solvers{linsoli}]). ...
    (['InitialGuess_',num2str(IGi)]).ParamsCM_opt;
% Stats from CasADi
Stats_3D(ww_3D(k)).m =  Results_3D. ....
    (['Derivative_',setup.derivatives]). ...
    (['Hessian_',hess_names{hessi}]). ...
    (['LinearSolver_',linear_solvers{linsoli}]). ...
    (['InitialGuess_',num2str(IGi)]).stats;
% Tracked joint angles
Qs_toTrack_3D(ww_3D(k)).m = Results_3D.(['NMesh_',num2str(N)]).Qs_toTrack;
% Tracked joint torques
Ts_toTrack_3D(ww_3D(k)).m = Results_3D.(['NMesh_',num2str(N)]).Ts_toTrack;
% Tracked ground reaction forces
GRFs_toTrack_3D(ww_3D(k)).m = Results_3D.(['NMesh_',num2str(N)]).GRFs_toTrack;
% Tracked ground reaction torques
GRMs_toTrack_3D(ww_3D(k)).m = Results_3D.(['NMesh_',num2str(N)]).GRMs_toTrack;
% Generic contact model parameters
ParamsCM_gen_3D(ww_3D(k)).m = Results_3D.ParamsCM_gen;
